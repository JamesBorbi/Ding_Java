package cn.jpush.alertme.factory.common;import cn.jpush.alertme.factory.common.exception.ServiceException;import freemarker.template.Configuration;import freemarker.template.Template;import freemarker.template.TemplateException;import freemarker.template.Version;import javax.servlet.ServletContext;import java.io.IOException;import java.io.StringWriter;import java.util.HashMap;import java.util.Locale;import java.util.Map;/** * FreeMarket Common Methods * Created by chenyueling on 2014/8/15. */public class FreeMarkerHelper {    public static final String ARTICLE_TEMPLATE = "article-page.html";    public static final String QUARTZ_JOBS = "quartz_jobs.html";    public static final String ERROR_PAGE_TEMPLATE = "error.html";    public static String createErrorPage(String errMsg, ServletContext context) throws ServiceException {        Map<String, Object> data = new HashMap<>();        data.put("errorMsg", errMsg);        return FreeMarkerHelper.createHtml(data, ERROR_PAGE_TEMPLATE, context);    }    public static String createHtml(Map<String, Object> data, String templatePath, ServletContext context) throws ServiceException {        Configuration freemarkerCfg = new Configuration(new Version("2.3.21"));        freemarkerCfg.setServletContextForTemplateLoading(context, "/");        freemarkerCfg.setEncoding(Locale.getDefault(), "UTF-8");        try {            Template template = freemarkerCfg.getTemplate(Config.TEMPLATE_RESOURCE_PATH + templatePath, "UTF-8");            template.setEncoding("UTF-8");            StringWriter out = new StringWriter();            template.process(data, out);            return out.getBuffer().toString();        } catch (IOException e) {            throw new ServiceException("FreeMarker模板不存在", e);        } catch (TemplateException e) {            throw new ServiceException("FreeMarker渲染失败", e);        } catch (Exception e) {            throw new ServiceException("未知错误", e);        }    }}